=pod

=head1 NAME

dos2unix - DOS/MAC naar UNIX en vice versa tekstbestand formaat omzetter

=head1 SYNOPSIS

    dos2unix [opties] [-c CONVMODUS] [-o BESTAND ...] [-n BESTAND-IN BESTAND-UIT ...]
    unix2dos [opties] [-c CONVMODUS] [-o BESTAND ...] [-n BESTAND-IN BESTAND-UIT ...]

=head1 DESCRIPTION

Het Dos2unix pakket bevat toepassingen C<dos2unix> en C<unix2dos> om 
platte tekstbestanden in DOS of MAC formaat naar UNIX om te zetten en
vice versa. Binaire bestanden en niet-reguliere bestanden, zoals
snelkoppelingen, worden automatisch overgeslagen, behalve als de omzetting
geforceerd wordt.

Dos2unix heeft een aantal conversiemodi gelijk aan dos2unix onder SunOS/Solaris.

In DOS/Windows tekstbestanden bestaat een regeleinde uit een combinatie van twee
tekens: een 'Carriage Return' (CR) gevolgd door een 'Line Feed' (LF). In Unix
tekstbestanden bestaat een regeleinde uit een enkel 'Newline' teken die gelijk is
ann een DOS 'Line Feed' (LF) teken.
In Mac tekst bestanden, voor Mac OS X, bestaan regeleindes uit een
enkel 'Carriage Return' teken. Mac OS X is Unix gebaseerd en heeft dezelfde
regeleindes als Unix. 

=head1 OPTIONS

=over 4

=item B<-c, --convmode CONVMODUS>

Stel conversiemodus in. Waarbij CONVMODUS een is van:
I<ascii>, I<7bit>, I<iso>, I<mac>
met ascii als standaard instelling.

=item B<-f, --force>

Forceer omzetting van alle bestanden. Ook binaire bestanden.

=item B<-h, --help>

Laat help tekst zien.

=item B<-k, --keepdate>

Behoud de datum van het invoerbestand in het uitvoerbestand.

=item B<-L, --license>

Laat de software licentie zien.

=item B<-l, --newline>

Voeg een extra regeleinde toe.

B<dos2unix>: Alleen DOS regeleindes worden omgezet naar twee Unix regeleindes.
In Mac modus worden alleen Mac regeleindes omgezet naar twee Unix regeleindes.

B<unix2dos>: Aleen Unix regeleindes worden omgezet naar twee DOS regeleindes.
In Mac modus worden Unix regeleindes omgezet naar twee Mac regeleindes.

=item B<-n, --newfile BESTAND-IN BESTAND-UIT ...>

Nieuw bestand modus. Converteer bestand BESTAND-IN en schrijf naar bestand
BESTAND-UIT. Bestandsnamen moeten opgegeven worden in paren. Jokertekens
moeten NIET gebruikt worden, anders verlies je bestanden.

=item B<-o, --oldfile BESTAND ...>

Oud bestand modes. Converteer bestand BESTAND en overschrijf het.
Dit is de standaard modus. Jokertekens kunnen gebruikt worden.

=item B<-q, --quiet>

Stille werking. Onderdruk alle waarschuwingen.

=item B<-V, --version>

Laat versie informatie zien.

=back

=head1 CONVERSION MODES

Conversie modi I<ascii>, I<7bit>, en I<iso>
zijn gelijk aan die van dos2unix/unix2dos onder SunOS/Solaris.

=over 4

=item B<ascii>

B<dos2unix>: In deze modus worden DOS regeleindes omgezet naar Unix regeleindes.
Unix en Mac regeleindes worden niet veranderd.

B<unix2dos>: In this mode Unix line endings are converted to DOS line endings.
DOS and Mac line endings are not changed.

Although the name of this mode is ASCII, which is a 7 bit standard,
the actual mode is 8 bit.

=item B<mac>

B<dos2unix>: In this mode Mac line endings are converted to Unix line endings.
DOS and Unix line endigs are not changed. You can also use the command C<mac2unix> to
run dos2unix in Mac mode.

B<unix2dos>: In this mode Unix line endings are converted to Mac line endings.
DOS and Mac line endigs are not changed. You can also use the command C<unix2mac> to
run unix2dos in Mac mode.

=item B<7bit>

In this mode DOS line endings are converted to Unix line endings or vice versa.
All 8 bit non-ASCII characters (with values from 128 to 255) are converted
to a space.

=item B<iso>

In this mode DOS line endings are converted to Unix line endings or vice versa.
Characters are converted between the DOS character set (code page) CP437 and ISO
character set ISO-8859-1 on Unix. CP437 characters without ISO-8859-1
equivalent, for which conversion is not possible, are converted to a dot. The
same counts for ISO-8859-1 characters without CP437 counterpart. CP437 is
mainly used in the USA. In Western Europe CP850 is more standard.

Another option to convert text files between different encodings is to use
dos2unix in combination with iconv(1). Iconv can convert between a long list of
character encodings. Some examples:

Convert from DOS DOSLatinUS to Unix Latin-1

    iconv -f CP437 -t ISO-8859-1 in.txt | dos2unix > out.txt

Convert from DOS DOSLatin1 to Unix Latin-1

    iconv -f CP850 -t ISO-8859-1 in.txt | dos2unix > out.txt

Convert from Windows WinLatin1 to Unix Latin-1

    iconv -f CP1252 -t ISO-8859-1 in.txt | dos2unix > out.txt

Convert from Windows WinLatin1 to Unix UTF-8 (Unicode)

    iconv -f CP1252 -t UTF-8 in.txt | dos2unix > out.txt

Convert from Windows UTF-16 (Unicode) to Unix UTF-8 (Unicode)

    iconv -f UTF-16 -t UTF-8 in.txt | dos2unix > out.txt

Convert from Unix Latin-1 to DOS DOSLatinUS

    unix2dos < in.txt | iconv -f ISO-8859-1 -t CP437 > out.txt

Convert from Unix Latin-1 to DOS DOSLatin1

    unix2dos < in.txt | iconv -f ISO-8859-1 -t CP850 > out.txt

Convert from Unix Latin-1 to Windows WinLatin1

    unix2dos < in.txt | iconv -f ISO-8859-1 -t CP1252 > out.txt

Convert from Unix UTF-8 (Unicode) to Windows WinLatin1

    unix2dos < in.txt | iconv -f UTF-8 -t CP1252 in.txt > out.txt

Convert from Unix UTF-8 (Unicode) to Windows UTF-16 (Unicode)

    unix2dos < in.txt | iconv -f UTF-8 -t UTF-16 > out.txt

See also L<http://czyborra.com/charsets/codepages.html>
and L<http://czyborra.com/charsets/iso8859.html>.

=back

=head1 UNICODE

Unicode files can be encoded in different encodings. On Unix/Linux Unicode
files are mostly encoded in UTF-8 encoding. UTF-8 is ASCII compatible. UTF-8
files can be in DOS, Unix or Mac format. It is safe to run dos2unix/unix2dos on
UTF-8 encoded files. On Windows mostly UTF-16 encoding is used for Unicode
files. Dos2unix/unix2dos should not be run on UTF-16 files. UTF-16 files are
automatically skipped, because it are binary files.

=head1 EXAMPLES

Get input from stdin and write output to stdout.

    dos2unix
    dos2unix -l -c mac

Convert and replace a.txt. Convert and replace b.txt.

    dos2unix a.txt b.txt
    dos2unix -o a.txt b.txt

Convert and replace a.txt in ascii conversion mode. 

    dos2unix a.txt

Convert and replace a.txt in ascii conversion mode.
Convert and replace b.txt in 7bit conversion mode.

    dos2unix a.txt -c 7bit b.txt
    dos2unix -c ascii a.txt -c 7bit b.txt

Convert a.txt from Mac to Unix format.

    dos2unix -c mac a.txt
    mac2unix a.txt

Convert a.txt from Unix to Mac format.

    unix2dos -c mac a.txt
    unix2mac a.txt

Convert and replace a.txt while keeping original date stamp.

    dos2unix -k a.txt
    dos2unix -k -o a.txt

Convert a.txt and write to e.txt.

    dos2unix -n a.txt e.txt

Convert a.txt and write to e.txt, keep date stamp of e.txt same as a.txt.

    dos2unix -k -n a.txt e.txt 

Convert and replace a.txt. Convert b.txt and write to e.txt.

    dos2unix a.txt -n b.txt e.txt
    dos2unix -o a.txt -n b.txt e.txt

Convert c.txt and write to e.txt. Convert and replace a.txt.
Convert and replace b.txt. Convert d.txt and write to f.txt.

    dos2unix -n c.txt e.txt -o a.txt b.txt -n d.txt f.txt

=head1 LOCALIZATION

=over 4

=item B<LANG>

The primary language is selected with the environment variable LANG. The LANG
variable consists out of several parts.  The first part is in small letters the
language code. The second is optional and is the country code in capital
letters, preceded with an underscore. There is also an optional third part:
character encoding, preceded with a dot. A few examples for POSIX standard type
shells:

    export LANG=nl               Dutch
    export LANG=nl_NL            Dutch, The Netherlands
    export LANG=nl_BE            Dutch, Belgium
    export LANG=es_ES            Spanish, Spain
    export LANG=es_MX            Spanish, Mexico
    export LANG=en_US.iso88591   English, USA, Latin-1 encoding
    export LANG=en_GB.UTF-8      English, UK, UTF-8 encoding

For a complete list of language and country codes see the gettext manual:
L<http://www.gnu.org/software/gettext/manual/gettext.html#Language-Codes>

On Unix systems you can use to command locale(1) to get locale specific
information.

=item B<LANGUAGE>

With the LANGUAGE environment variable you can specify a priority list of
languages, separated by colons. Dos2unix gives preference to LANGUAGE over LANG.
For instance, first Dutch and then German: C<LANGUAGE=nl:de>. You have to first
enable localization, by setting LANG (or LC_ALL) to a value other than
"C", before you can use a language priority list through the LANGUAGE
variable. See also the gettext manual:
L<http://www.gnu.org/software/gettext/manual/gettext.html#The-LANGUAGE-variable>

For Esperanto there is a special language file in x-method format. X-method can
be used on systems that don't support Latin-3 or Unicode character encoding.
Make LANGUAGE equal to "eo-x:eo".

If you select a language which is not available you will get the
standard English messages.

=item B<DOS2UNIX_LOCALEDIR>

With the environment variable DOS2UNIX_LOCALEDIR the LOCALEDIR set during
compilation can be overruled. LOCALEDIR is used to find the language files. The
GNU default value is C</usr/local/share/locale>. Option "-V" will display the
LOCALEDIR that is used.

Example (windows cmd):

    set DOS2UNIX_LOCALEDIR=c:/my_prefix/share/locale

=back

=head1 AUTHORS

Benjamin Lin - <blin@socs.uts.edu.au>

Bernd Johannes Wuebben (mac2unix mode) - <wuebben@kde.org>

Erwin Waterlander - <waterlan@xs4all.nl>

Project page: L<http://www.xs4all.nl/~waterlan/dos2unix.html>

SourceForge page: L<http://sourceforge.net/projects/dos2unix/>

Freshmeat: L<http://freshmeat.net/projects/dos2unix>

=head1 SEE ALSO

iconv(1)

=cut
